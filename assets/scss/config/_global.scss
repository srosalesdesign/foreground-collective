/********************GLOBAL********************/

* {
  /* (http://paulirish.com/2012/box-sizing-border-box-ftw/) */
  box-sizing: border-box;

  &:after,
  &:before {
    box-sizing: border-box;
  }

  @include line-height(1);
  // @include margin(0, 0, 1);

  @include m {
    $leading-rem: $leading-rem-desktop;
    @import 'mixins';
    @include line-height(1);
    // @include margin-bottom(1);
    // margin-left: auto;
    // margin-right: auto;
  }
}

html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: #{$base-font-size + '%'};
  font-family: $font-body;
  color: $color-font-body;
  @include m {
    font-size: #{$base-font-size-desktop / 100 + 'rem'};
  }
}

body {
  background-color: $white;
  overflow-x: hidden;
}

/* Links */
a, .a {
  color: $olive;
  text-decoration: none;

  &:link, &:active, &:visited {
    color: $olive;
    text-decoration: none;
    outline: none;
  }

  &:hover, &:focus {
    text-decoration: underline;
  }
}

/* Buttons */
button, .button, a.acf-button, input[type="button"], input[type="reset"], input[type="submit"] {
  border-radius: 0;
  border: 0;
  box-shadow: none;
  text-shadow: none;
  height: auto;
  line-height: normal;
  font-size: 1rem;
  cursor: pointer;
  background-color: $olive;
  color: $white;
  padding: 0.5rem 1rem;
  font-family: $font-headings;
  transition-property: background-color, color;
  transition-duration: 0.25s;
  transition-delay: 0s;
  transition-timing-function: ease-in-out;

  &:link, &:active, &:visited {
    background-color: $olive;
    color: $white;
    line-height: normal;
    outline: none;
  }

  &:hover, &:focus {
    background-color: darken($olive, 5%);
    text-decoration: none;
  }

  /* Example alternate button color */
  &.black {
    background-color: $black;
    color: $white;

    &:link, &:active, &:visited {
      background-color: $black;
      color: $white;
    }

    &:hover, &:focus {
      background-color: lighten($black, 8%);
    }
  }
}

a.acf-button {
  &.blue {
    &:hover, &:focus {
      background-color: darken($olive, 5%);
    }
  }
}

/* Figures and Blockquotes */
figcaption {
  color: $color-font-figcaption;
  font-size: 0.8125rem;
  font-style: italic;
  text-align: center;
}

figure.alignleft,
figure.alignright {

  @include m {
    $leading-rem: $leading-rem-desktop;
    @import 'mixins';

    max-width: #{0.5 * $max-width + 'rem'};

    @if $paragraph-indent == true {
      @include padding-equal(1);
      @include margin-bottom(0);
    } @else {
      @include padding(0, 1);
    }

  }

}

blockquote {
  background: $gray;
  border-left: 0.25rem solid $silver;
  @include margin(1.5, 0);
  @include padding(1, 0.5);
  quotes: "\201C""\201D";
  position: relative;
  &:before {
    color: $silver;
    content: open-quote;
    font-size: 4rem;
    position: absolute;
    top: 2px;
  }
  p {
    display: inline;
  }
}

cite {
  display: block;
  font-style: normal;
}

small, .small {
  @include line-height(0.5);
  font-size: 70%;
  @include m {
    $leading-rem: $leading-rem-desktop;
    @import 'mixins';
    @include line-height(0.5);
  }
}

/* Paragraphs and Lists
   ========================================================================== */

p, ul, ol {
  @include margin(0, 0, 1);
  @include m {
    $leading-rem: $leading-rem-desktop;
    @import 'mixins';
    @include margin(0, 0, 1);
    margin-left: auto;
    margin-right: auto;
  }
}

ul, ol {
  ul, ol {
    margin-bottom: 0;
  }
}

@if $paragraph-indent == true {

  p + p {
    @include margin-top(-1);
    text-indent: #{ $leading-rem + 'rem'};

    .alignleft + p,
    .alignright + p {

      @include m {
        $leading-rem: $leading-rem-desktop;
        text-indent: #{ $leading-rem + 'rem'};
      }

    }
  }
}

@include m {
  $leading-rem: $leading-rem-desktop;
  @import 'mixins';

  @if $paragraph-indent == true {

    p + p,
    .alignleft + p,
    .alignright + p {
      @include margin-top(-1);
    }

  }

}

// Fix letter spacing for uppercase
.uppercase {
  letter-spacing: .1em;
  text-transform: uppercase;
  font-family: $font-headings;
  font-weight: bold;
}

// Horizontal rule
$hr-style: line; // [ line / type ]
$hr-type-content: '***'; // [ '***' ]
$hr-type-char-spacing: .2em; // [ .2em ]
$hr-margin: 2;
$hr-margin-desktop: $hr-margin;
$hr-color: $color-font-body;
$hr-width: 100; // [ 100 ] — In pixels, only for line style
$hr-height: 4; // [ 2 ] — In pixels, only for line style

hr {
  @include margin-top($hr-margin);
  @include margin-bottom($hr-margin);

  box-sizing: content-box;
  border: 0;
  color: $hr-color;
  display: block;
  height: #{$leading-rem + 'rem'};
  margin-right: auto;
  margin-left: auto;

  @if $hr-style == 'line' {
    background-size: 100% #{$leading-rem + 'rem'};
    background-image: linear-gradient(to bottom, transparent 1px, transparent #{ 0.5 * $leading - (0.5 * $hr-height) + 'px'},  $hr-color #{ 0.5 * $leading - (0.5 * $hr-height) + 'px'}, $hr-color #{ (0.5 * $leading  - (0.5 * $hr-height)) + $hr-height + 'px'}, transparent #{ (0.5 * $leading  - (0.5 * $hr-height)) + $hr-height + 'px'}, transparent #{$leading + 'px'});

    @if $hr-width == null {
      width: 100%;
    } @else {
      width: #{$hr-width + 'px'};
    }
  }

  @include m {
    $leading-rem: $leading-rem-desktop;
    $hr-margin: $hr-margin-desktop;

    @if $hr-style == 'line' {
      background-size: 100% #{$leading-rem + 'rem'};
      background-image: linear-gradient(to bottom, transparent 1px, transparent #{ 0.5 * $leading - (0.5 * $hr-height) + 'px'}, $hr-color #{ 0.5 * $leading - (0.5 * $hr-height) + 'px'}, $hr-color #{ (0.5 * $leading - (0.5 * $hr-height)) + $hr-height + 'px'}, transparent #{ (0.5 * $leading - (0.5 * $hr-height)) + $hr-height + 'px'}, transparent #{$leading + 'px'});
    }

  }

  @if $hr-style == 'type' {
    text-align: center;

    &:before {
      content: $hr-type-content;
      letter-spacing: $hr-type-char-spacing;
    }
  }
}

/* Headings */
$headings: (
  h1: (2.5, 2, 4, 1),
  h2: (1.6875, 1.5, 2.5, 0.5),
  h3: (1.375, 1, 2, 0.5),
  h4: (1.2, 1, 1.5, 0.5),
  h5: (1, 1, 2.5, 0.5),
  h6: (1, 1, 2.5, 0.5)
);

// Set headings sizes, line-heights and margins
@each $heading, $properties in $headings {
  #{$heading}, .#{$heading} {
    font-size: unquote(nth($properties, 1) + 'rem');
    @include line-height(nth($properties, 2));
    @include margin-top(nth($properties, 3));
    @include margin-bottom(nth($properties, 4));
    font-weight: bold;
  }
}

@include m {
  $leading-rem: $leading-rem-desktop;

  @import 'mixins';

  @each $heading, $properties in $headings {
    #{$heading}, .#{$heading} {
      @include line-height(nth($properties, 2));
      @include margin-top(nth($properties, 3));
      @include margin-bottom(nth($properties, 4));
    }
  }
}

// Set margins between headings
h1 + h2, .h1 + .h2 {
  @include margin-top(1);
  @include m {
    $leading-rem: $leading-rem-desktop;
    @import 'mixins';
    @include margin-top(1);
  }
}

h2 + h3,
.h2 + .h3,
h3 + h4,
.h3 + .h4,
h4 + h5,
.h4 + .h5 {
  @include margin-top(0.5);
  @include m {
    $leading-rem: $leading-rem-desktop;
    @import 'mixins';
    @include margin-top(0.5);
  }
}

h5 + h6, .h5 + .h6 {
  @include margin-top(-0.5);
  @include m {
    $leading-rem: $leading-rem-desktop;
    @import 'mixins';
    @include margin-top(-0.5);
  }
}

h6, .h6 {
  font-style: italic;
  font-weight: normal;
}

// Change headings font if a heading font is set
@if $font-headings != null {
  h1, .h1,
  h2, .h2,
  h3, .h3,
  h4, .h4,
  h5, .h5,
  h6, .h6 {
    font-family: $font-headings;
  }
}

/* Form Inputs */
input[type="checkbox"], input[type="radio"] {
  cursor: pointer;
}

input[type=email], input[type=tel], input[type=number], input[type=password], input[type=search], input[type=text], input[type=url], select, textarea {
  border: 1px solid $silver;
}

/* Default Image Styles */
img {
  height: auto;
  max-width: 100%;
}

/* WordPress Image Styles */
[class^="wp-image-"], [class*=" wp-image-"], .wp-caption {
  display: block;
  padding: 4px;
  background-color: $gray;
  border: 1px solid $silver;
  height: auto;
  max-width: 100%;

  .wp-caption & {
    padding: 0;
    border: 0;
  }

  .wp-caption-text {
    font-size: 75%;
    font-style: italic;
    margin: 0;
    padding: 16px 16px 12px;
  }
}

/*
 * oEmbed Styles
 * To make an oEmbed responsive, simply wrap it in
 * `.embed-container`.
 */
.embed-container {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  max-width: 100%;
  height: auto;
  @include margin-top(1);
  @include margin-bottom(1);
  margin-left: auto;
  margin-right: auto;
  @include m {
    $leading-rem: $leading-rem-desktop;
    @import 'mixins';
    @include margin-top(1);
    @include margin-bottom(1);
  }
}

iframe, object, embed {
  max-width: 100%;
  display: block;
  @include margin-top(1);
  @include margin-bottom(1);
  margin-left: auto;
  margin-right: auto;
  @include m {
    $leading-rem: $leading-rem-desktop;
    @import 'mixins';
    @include margin-top(1);
    @include margin-bottom(1);
  }

  .embed-container & {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

/* Containers */
.wrap, .contain, .constrain {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  word-wrap: break-word;
}

.wrap {
  max-width: 1024px;
}

.contain {
  max-width: 700px;
}

.constrain {
  max-width: 450px;
}

/* Toggles */
.toggle-content {
  display: none;
  position: relative;
  padding: 1rem 1rem 0;

  p {
    &:first-child {
      margin-top: 0;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }
}

.toggle-heading {
  display: block;
  padding: 0.25rem 1.75rem 0.25rem 0.5rem;
  margin: 1.5rem auto 0;
  color: $olive;
  cursor: pointer;
  border: 1px solid $olive;
  position: relative;

  &:after {
    @include icons;

    content: "\f3d0";
    color: $olive;
    position: absolute;
    display: block;
    bottom: 0.2rem;
    right: 0.5rem;
    line-height: inherit;
  }

  &.active {
    &:after {
      content: "\f3d8";
    }
  }
}

/* Code */
code, kbd, pre, samp, .code {
  background-color: $gray;
  color: $color-font-light;
  padding: 1px 3px;
  font-size: 16px;
  line-height: 1.4;
  border-radius: 4px;
  border: 1px solid $silver;
}

code, kbd, samp, .code {
  display: inline-block;
  vertical-align: middle;
}

pre, .pre {
  display: block;
  @include margin-top(1);
  @include margin-bottom(1);
  @include m {
    $leading-rem: $leading-rem-desktop;
    @import 'mixins';
    @include margin-top(1);
    @include margin-bottom(1);
  }
  margin-left: auto;
  margin-right: auto;
  padding: 8px 12px 10px;
  overflow-x: auto;
}

/* Misc. */
.scratch-bg {
  height: 200px;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
}

.white-popup {
  position: relative;
  background: $white;
  padding: 20px;
  width: auto;
  max-width: 700px;
  margin: 1rem auto;
}

br {
  &.brm {
    @include m {
      display: none;
      visibility: hidden;
    }
  }

  &.mbr {
    display: none;
    visibility: hidden;

    @include m {
      display: block;
      visibility: visible;
    }
  }
}

.acf-map {
  width: 100%;
  height: 400px;
  border: $gray solid 1px;
  margin: 20px 0;
}

.gm-style img {
  max-width: none;
}

/*
 * HELPER CLASSES
 */

.hpad {
  padding-left: 1rem;
  padding-right: 1rem;
}

.left {
  text-align: left;
}

.center {
  text-align: center;
}

.right {
  text-align: right;
}

.alignleft {
  margin: 1rem auto;
  @include m {
    margin: 0 1rem 1rem 0;
    float: left;
  }
}

.aligncenter {
  margin: 1rem auto;
  clear: both;
}

.alignright {
  margin: 1rem auto;
  @include m {
    margin: 0 0 1rem 1rem;
    float: right;
  }
}

.halign {
  @include halign;
}

.valign {
  @include m {
    @include valign;
  }
}

.valign-always {
  @include valign;
}

.hvalign {
  @include hvalign;
}

/* Spin Animation */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.spin {
  animation: spin 2s linear infinite;
}

/* Blink Animation */
@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0;
  }
}

.blink {
  animation: blink 2s ease infinite;
}

/*
 * CUSTOM HELPER CLASSES below here
 */
